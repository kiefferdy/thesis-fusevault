services:
  # Redis service for rate limiting (optional)
  redis:
    image: redis:7-alpine
    container_name: fusevault-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - fusevault-network

  # Backend FastAPI service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fusevault-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - /app/__pycache__
    networks:
      - fusevault-network
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - __pycache__/
        - action: rebuild
          path: ./backend/requirements.txt

  # Web3 Storage Service
  web3-storage:
    build:
      context: ./web3-storage-service
      dockerfile: Dockerfile
    container_name: fusevault-web3-storage
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - ./web3-storage-service/.env
    volumes:
      - ./web3-storage-service:/app
      - /app/node_modules
      - web3_storage_uploads:/app/upload_queue
    networks:
      - fusevault-network
    develop:
      watch:
        - action: sync
          path: ./web3-storage-service
          target: /app
          ignore:
            - node_modules/
            - upload_queue/
        - action: rebuild
          path: ./web3-storage-service/package.json

  # Frontend React service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost:8000
    container_name: fusevault-frontend
    restart: unless-stopped
    ports:
      - "3001:80"
    depends_on:
      - backend
      - web3-storage
    networks:
      - fusevault-network

volumes:
  web3_storage_uploads:
    driver: local
  redis_data:
    driver: local

networks:
  fusevault-network:
    driver: bridge